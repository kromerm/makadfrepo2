{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory Name"
		},
		"MoviesADLS": {
			"type": "string"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Currency Converter 2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "currencyconverter",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Currency Converter 2",
								"type": "DataFlowReference"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Currency Converter 2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Currency Converter 2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CurrencySales",
								"type": "DatasetReference"
							},
							"name": "CurrencySales"
						},
						{
							"dataset": {
								"referenceName": "CurrencyRates",
								"type": "DatasetReference"
							},
							"name": "ExchangeRates"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "adlsoutput_folder",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "ModifyColumns1",
							"description": "Autogenerated by data preview actions"
						},
						{
							"name": "ConvertCurrency"
						},
						{
							"name": "Totals"
						},
						{
							"name": "Lookup1"
						},
						{
							"name": "SetExchangeDate"
						}
					],
					"script": "\n\nsource(output(\n\t\tSalesID as integer,\n\t\tAmount as integer,\n\t\tQuantity as integer,\n\t\tCountry as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> CurrencySales\nsource(output(\n\t\tDate as string,\n\t\tCountry as string,\n\t\tValue as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> ExchangeRates\nExchangeRates derive(Value = toDecimal(Value,4)) ~> ModifyColumns1\nLookup1 derive(newamount = Amount * Value) ~> ConvertCurrency\nConvertCurrency derive(OldTotal = Quantity * Amount,\n\t\tNewTotal = Quantity * newamount) ~> Totals\nSetExchangeDate, ModifyColumns1 lookup(CurrencySales@Country == ExchangeRates@Country\n\t&& ExchangeDate == Date,\n\tbroadcast: 'none')~> Lookup1\nCurrencySales derive(ExchangeDate = '2017-12-01') ~> SetExchangeDate\nTotals sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['newcurrency.csv'],\n\tmapColumn(\n\t\tSalesID,\n\t\tAmount,\n\t\tQuantity,\n\t\tCountry = ExchangeRates@Country,\n\t\tValue,\n\t\tnewamount,\n\t\tOldTotal,\n\t\tNewTotal\n\t),\n\tpartitionBy('hash', 1)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/adlsoutput_folder')]",
				"[concat(variables('factoryId'), '/datasets/CurrencySales')]",
				"[concat(variables('factoryId'), '/datasets/CurrencyRates')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adlsoutput_folder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('MoviesADLS')]",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "output",
						"fileSystem": "mycontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CurrencySales')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('MoviesADLS')]",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "currencysales.csv",
						"folderPath": "SampleData",
						"fileSystem": "mycontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "SalesID",
						"type": "String"
					},
					{
						"name": "Amount",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CurrencyRates')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "[parameters('MoviesADLS')]",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "monthly_csv.csv",
						"folderPath": "SampleData",
						"fileSystem": "mycontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Date",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					},
					{
						"name": "Value",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		}
	]
}